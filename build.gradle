buildscript {
    ext {
        repoConfig = {
            mavenCentral()

            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }

        jooqVersion = "3.11.5"
        junitVersion = "5.3.1"
    }

    repositories repoConfig
}

plugins {
    id "java"
    id "jacoco"
    id "org.unbroken-dome.xjc" version "1.3.0"
    id "pl.allegro.tech.build.axion-release" version "1.9.3"
    id "com.bmuschko.nexus" version "2.3.1"
    id "io.codearte.nexus-staging" version "0.12.0"
}

repositories repoConfig

scmVersion {
    hooks {
        pre 'fileUpdate', [file: 'README.md', pattern: {v, c -> /verjo:$v/}, replacement: {v, c -> "verjo:$v"}]
        pre 'commit'
    }
}

group "com.github.piorkowskiprzemyslaw"
version scmVersion.version
sourceCompatibility = 1.11
targetCompatibility = 1.11

dependencies {
    compile "org.jooq:jooq-codegen:$jooqVersion"
    compile "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:1.11.1"

    compileOnly 'org.projectlombok:lombok:1.18.2'

    xjcClasspath "org.jvnet.jaxb2_commons:jaxb2-basics:1.11.1"
    xjcClasspath "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:1.0.4"
    xjcClasspath "org.jvnet.jaxb2_commons:jaxb2-fluent-api:3.0"
    xjcClasspath "org.jvnet.jaxb2_commons:jaxb2-commons-lang:2.4"

    testCompile "com.google.jimfs:jimfs:1.1"
    testCompile "org.assertj:assertj-core:3.11.1"
    testCompile "javax.xml.bind:jaxb-api:2.3.0"
    testCompile "com.sun.xml.bind:jaxb-core:2.3.0"
    testCompile "com.sun.xml.bind:jaxb-impl:2.3.0"
    testCompile "javax.activation:activation:1.1.1"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport

    systemProperty "com.sun.xml.bind.v2.bytecode.ClassTailor.noOptimize", true
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml {
            enabled true
        }
        html {
            enabled false
        }
    }
}

wrapper {
    gradleVersion = "4.10.2"
    distributionType = Wrapper.DistributionType.ALL
}

xjcGenerate {
    source = fileTree('src/main/resources/schema/2_3') { include 'schema.xsd' }
    bindingFiles = fileTree('src/main/resources/schema/2_3/bindings') { include 'binding.xjb' }
    outputDirectory = file("gen/java")
    targetPackage = "com.github.piorkowskiprzemyslaw.verjo.xsd"
    extraArgs = ['-Xannotate',
                 '-Xfluent-api',
                 '-XtoString',
                 '-Xequals',
                 '-XhashCode']
}

clean {
    delete "gen"
}

modifyPom {
    project {
        name 'VerJo'
        description 'VerJo is an jOOQ plugin providing code generation from Vertabelo XML files.'
        url 'https://github.com/piorkowskiprzemyslaw/verjo'
        inceptionYear '2018'

        scm {
            url 'https://github.com/piorkowskiprzemyslaw/verjo'
            connection 'scm:https://github.com/piorkowskiprzemyslaw/verjo.git'
            developerConnection 'scm:git@github.com:piorkowskiprzemyslaw/verjo.git'
        }

        licenses {
            license {
                name 'MIT License'
                url 'https://raw.githubusercontent.com/piorkowskiprzemyslaw/verjo/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'piorkowskiprzemyslaw'
                name 'Przemysław Piórkowski'
                email 'piorkowskiprzemyslaw@gmail.com'
            }
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
}